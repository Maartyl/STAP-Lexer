#ifndef UCHAR_HEADER
#define UCHAR_HEADER
#include <stdio.h>
#include <stdlib.h>
 
/**
 * unicode character [UTF-8]
 * 
 * , representation and transformation operations
 * simple support, just transforms bytes to numberes and vice versa
 * DEAD chars are considered normal valid chars too, etc.
 */

typedef int UChar;  ///representation as int

///will read whole character from UTF-8 \stream [1 to 4 bytes]
UChar uc_read(FILE *stream);

///will write UTF-8 representation of \c to \stream [1 to 4 bytes]
///returns \false for invalid c, number of written bytes otherwise
int uc_write(UChar c, FILE *stream);

///will call \f for each generated byte from \c representing UTF-8 sequence
///returns \false for invalid c, number of \c as (UTF-8 represented bytes) otherwise
int uc_decompose(UChar c, void(*f)(int));

///will return ptr to null terminated seqment of memory with bytes [max 4 + null]
///returns "" for invalid \c, str otherwise
char *uc_toStr(UChar c);

#endif
